rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isRider() {
      return isSignedIn() && exists(/databases/$(database)/documents/riders/$(request.auth.uid));
    }
    
    function isDriver() {
      return isSignedIn() && exists(/databases/$(database)/documents/drivers/$(request.auth.uid));
    }
    
    function isAdmin() {
      return isSignedIn() && request.auth.token.admin == true;
    }

    // Rider rules
    match /riders/{riderId} {
      allow read: if isSignedIn() && (request.auth.uid == riderId || isDriver());
      allow write: if request.auth.uid == riderId;
    }

    // Driver rules
    match /drivers/{driverId} {
      allow read: if isSignedIn(); // Both riders and drivers can read driver info
      allow write: if request.auth.uid == driverId;
    }

    // Saved Riders rules
    match /savedRiders/{savedRiderId} {
      allow read: if isSignedIn() && (
        isAdmin() ||
        resource.data.driverId == request.auth.uid ||
        resource.data.riderId == request.auth.uid ||
        isDriver()  // Allow all drivers to read saved riders
      );
      allow create: if isSignedIn() && (
        request.resource.data.driverId == request.auth.uid ||
        isAdmin()
      );
      allow update, delete: if isSignedIn() && (
        resource.data.driverId == request.auth.uid ||
        isAdmin()
      );
    }

    // Chat rules
    match /chats/{chatId} {
      allow read: if isSignedIn() && (
        resource.data.riderId == request.auth.uid || 
        resource.data.driverId == request.auth.uid
      );
      allow create: if isSignedIn() && (
        request.resource.data.riderId == request.auth.uid || 
        request.resource.data.driverId == request.auth.uid
      );
      allow update: if isSignedIn() && (
        resource.data.riderId == request.auth.uid || 
        resource.data.driverId == request.auth.uid
      );
    }

    // Messages rules
    match /messages/{messageId} {
      allow read: if isSignedIn() && (
        resource.data.senderId == request.auth.uid || 
        resource.data.receiverId == request.auth.uid
      );
      allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid;
    }
  }
}